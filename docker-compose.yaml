version: '3.8'

# 
# NightBFF Integration Testing Stack
# See README.md for usage instructions.
# This stack uses pre-built images from GHCR.
#

services:
  db:
    image: postgis/postgis:15-3.3
    container_name: nightbff_db_integration
    ports:
      - "5435:5432"
    volumes:
      - postgres_data_integration:/var/lib/postgresql/data
    env_file:
      - ./.env.integration
    networks:
      - nightbff_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: nightbff_redis_integration
    ports:
      - "6379"
    networks:
      - nightbff_net

  backend:
    image: ghcr.io/apesensei/nightbff-backend:int-f0053e4
    container_name: nightbff_backend_integration
    ports:
      - "3000:3000"
    env_file:
      - ./.env.integration
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - nightbff_net

  frontend:
    image: ghcr.io/apesensei/nightbff-frontend:int-a50f628
    container_name: nightbff_frontend_integration
    ports:
      - "8081:8081" # Expose Metro bundler
    command: ["npm", "start", "--", "--host", "lan"]
    networks:
      - nightbff_net
    environment:
      - EXPO_NO_INTERACTIVE=1

volumes:
  postgres_data_integration:
    driver: local

networks:
  nightbff_net:
    driver: bridge
