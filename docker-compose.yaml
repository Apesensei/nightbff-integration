version: '3.8'

# 
# NightBFF Integration Testing Stack
# See README.md for usage instructions.
# This stack uses pre-built images from GHCR.
#

services:
  db:
    image: postgis/postgis:15-3.3
    container_name: nightbff_db_integration
    ports:
      - "5435:5432"
    volumes:
      - postgres_data_integration:/var/lib/postgresql/data
    env_file:
      - ./.env.integration
    networks:
      - nightbff_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d nightbff_integration_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: nightbff_redis_integration
    ports:
      - "6379"
    networks:
      - nightbff_net

  migrator:
    image: ghcr.io/apesensei/nightbff-backend:int-f0053e4 # Will be replaced by CI
    container_name: nightbff_migrator_integration
    depends_on:
      db:
        condition: service_healthy
    command:
      - /bin/sh
      - -c
      - |
        set -e
        echo "✅ Migrator standing by. Waiting for DB..."
        
        # Node.js-based database connection test (no pg_isready needed)
        until node -e "
          const { Client } = require('pg');
          const client = new Client('postgresql://admin:testpassword@db:5432/nightbff_integration_db');
          client.connect()
            .then(() => { console.log('DB ready'); client.end(); process.exit(0); })
            .catch(() => { console.log('DB not ready'); client.end(); process.exit(1); });
        " 2>/dev/null; do
          echo "Postgres is unavailable - sleeping"
          sleep 2
        done
        
        echo "✅ DB is ready. Running migration validation..."
        npm run migration:validate:compiled
        
        echo "✅ Validation complete. Applying migrations..."
        npm run migration:run
        
        echo "✅ Migrations applied successfully. Migrator finished."
    restart: 'no'
    environment:
      - DATABASE_URL=postgresql://admin:testpassword@db:5432/nightbff_integration_db?schema=public

  backend:
    image: ghcr.io/apesensei/nightbff-backend:int-f0053e4 # Will be replaced by CI
    container_name: nightbff_backend_integration
    depends_on:
      migrator:
        condition: service_completed_successfully
    ports:
      - "3000:3000"
    env_file:
      - ./.env.integration
    networks:
      - nightbff_net

  frontend:
    image: ghcr.io/apesensei/nightbff-frontend:int-a50f628
    container_name: nightbff_frontend_integration
    ports:
      - "8081:8081" # Expose Metro bundler
    command: ["npm", "start", "--", "--host", "lan"]
    networks:
      - nightbff_net
    environment:
      - EXPO_NO_INTERACTIVE=1

volumes:
  postgres_data_integration:
    driver: local

networks:
  nightbff_net:
    driver: bridge
 